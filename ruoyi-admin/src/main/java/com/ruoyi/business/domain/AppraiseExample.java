package com.ruoyi.business.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AppraiseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public AppraiseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdIsNull() {
            addCriterion("reverse_info_id is null");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdIsNotNull() {
            addCriterion("reverse_info_id is not null");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdEqualTo(Integer value) {
            addCriterion("reverse_info_id =", value, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdNotEqualTo(Integer value) {
            addCriterion("reverse_info_id <>", value, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdGreaterThan(Integer value) {
            addCriterion("reverse_info_id >", value, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("reverse_info_id >=", value, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdLessThan(Integer value) {
            addCriterion("reverse_info_id <", value, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdLessThanOrEqualTo(Integer value) {
            addCriterion("reverse_info_id <=", value, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdIn(List<Integer> values) {
            addCriterion("reverse_info_id in", values, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdNotIn(List<Integer> values) {
            addCriterion("reverse_info_id not in", values, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdBetween(Integer value1, Integer value2) {
            addCriterion("reverse_info_id between", value1, value2, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andReverseInfoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("reverse_info_id not between", value1, value2, "reverseInfoId");
            return (Criteria) this;
        }

        public Criteria andCleanNumIsNull() {
            addCriterion("clean_num is null");
            return (Criteria) this;
        }

        public Criteria andCleanNumIsNotNull() {
            addCriterion("clean_num is not null");
            return (Criteria) this;
        }

        public Criteria andCleanNumEqualTo(Integer value) {
            addCriterion("clean_num =", value, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumNotEqualTo(Integer value) {
            addCriterion("clean_num <>", value, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumGreaterThan(Integer value) {
            addCriterion("clean_num >", value, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("clean_num >=", value, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumLessThan(Integer value) {
            addCriterion("clean_num <", value, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumLessThanOrEqualTo(Integer value) {
            addCriterion("clean_num <=", value, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumIn(List<Integer> values) {
            addCriterion("clean_num in", values, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumNotIn(List<Integer> values) {
            addCriterion("clean_num not in", values, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumBetween(Integer value1, Integer value2) {
            addCriterion("clean_num between", value1, value2, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andCleanNumNotBetween(Integer value1, Integer value2) {
            addCriterion("clean_num not between", value1, value2, "cleanNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumIsNull() {
            addCriterion("qiu_tai_num is null");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumIsNotNull() {
            addCriterion("qiu_tai_num is not null");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumEqualTo(Integer value) {
            addCriterion("qiu_tai_num =", value, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumNotEqualTo(Integer value) {
            addCriterion("qiu_tai_num <>", value, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumGreaterThan(Integer value) {
            addCriterion("qiu_tai_num >", value, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("qiu_tai_num >=", value, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumLessThan(Integer value) {
            addCriterion("qiu_tai_num <", value, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumLessThanOrEqualTo(Integer value) {
            addCriterion("qiu_tai_num <=", value, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumIn(List<Integer> values) {
            addCriterion("qiu_tai_num in", values, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumNotIn(List<Integer> values) {
            addCriterion("qiu_tai_num not in", values, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumBetween(Integer value1, Integer value2) {
            addCriterion("qiu_tai_num between", value1, value2, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andQiuTaiNumNotBetween(Integer value1, Integer value2) {
            addCriterion("qiu_tai_num not between", value1, value2, "qiuTaiNum");
            return (Criteria) this;
        }

        public Criteria andTempNumIsNull() {
            addCriterion("temp_num is null");
            return (Criteria) this;
        }

        public Criteria andTempNumIsNotNull() {
            addCriterion("temp_num is not null");
            return (Criteria) this;
        }

        public Criteria andTempNumEqualTo(Integer value) {
            addCriterion("temp_num =", value, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumNotEqualTo(Integer value) {
            addCriterion("temp_num <>", value, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumGreaterThan(Integer value) {
            addCriterion("temp_num >", value, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("temp_num >=", value, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumLessThan(Integer value) {
            addCriterion("temp_num <", value, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumLessThanOrEqualTo(Integer value) {
            addCriterion("temp_num <=", value, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumIn(List<Integer> values) {
            addCriterion("temp_num in", values, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumNotIn(List<Integer> values) {
            addCriterion("temp_num not in", values, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumBetween(Integer value1, Integer value2) {
            addCriterion("temp_num between", value1, value2, "tempNum");
            return (Criteria) this;
        }

        public Criteria andTempNumNotBetween(Integer value1, Integer value2) {
            addCriterion("temp_num not between", value1, value2, "tempNum");
            return (Criteria) this;
        }

        public Criteria andCommentIsNull() {
            addCriterion("comment is null");
            return (Criteria) this;
        }

        public Criteria andCommentIsNotNull() {
            addCriterion("comment is not null");
            return (Criteria) this;
        }

        public Criteria andCommentEqualTo(String value) {
            addCriterion("comment =", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotEqualTo(String value) {
            addCriterion("comment <>", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThan(String value) {
            addCriterion("comment >", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThanOrEqualTo(String value) {
            addCriterion("comment >=", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLessThan(String value) {
            addCriterion("comment <", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLessThanOrEqualTo(String value) {
            addCriterion("comment <=", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLike(String value) {
            addCriterion("comment like", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotLike(String value) {
            addCriterion("comment not like", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentIn(List<String> values) {
            addCriterion("comment in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotIn(List<String> values) {
            addCriterion("comment not in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentBetween(String value1, String value2) {
            addCriterion("comment between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotBetween(String value1, String value2) {
            addCriterion("comment not between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeIsNull() {
            addCriterion("appraise_time is null");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeIsNotNull() {
            addCriterion("appraise_time is not null");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeEqualTo(Date value) {
            addCriterion("appraise_time =", value, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeNotEqualTo(Date value) {
            addCriterion("appraise_time <>", value, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeGreaterThan(Date value) {
            addCriterion("appraise_time >", value, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("appraise_time >=", value, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeLessThan(Date value) {
            addCriterion("appraise_time <", value, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeLessThanOrEqualTo(Date value) {
            addCriterion("appraise_time <=", value, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeIn(List<Date> values) {
            addCriterion("appraise_time in", values, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeNotIn(List<Date> values) {
            addCriterion("appraise_time not in", values, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeBetween(Date value1, Date value2) {
            addCriterion("appraise_time between", value1, value2, "appraiseTime");
            return (Criteria) this;
        }

        public Criteria andAppraiseTimeNotBetween(Date value1, Date value2) {
            addCriterion("appraise_time not between", value1, value2, "appraiseTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_appraise
     *
     * @mbg.generated do_not_delete_during_merge Wed Apr 22 12:41:12 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_appraise
     *
     * @mbg.generated Wed Apr 22 12:41:12 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}